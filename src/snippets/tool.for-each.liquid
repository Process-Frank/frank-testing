{%- comment -%}
  For Each Tool
    Complex tool that will allow you to do a "for each" without using a single
    one of your 3 depths of loops

  Parameters:
    do - Snippet to do, this will be locally scoped
    array - Array to forEach for (String Arrays Only)
    data (Optional) - Extra data to pass

  Passed to snippet:
    item - String item in the array
    stack - The parent stack, don't modify this, this is only for nesting for-each snippets
    data - The data object passed to the loop
    forindex - The current index of the forloop you're in.

  Note:
    You can access the current item inside the snippet as "item", and the extra
    data as "data"

  Version:
    1.0.0 - 2018/09/13
{%- endcomment -%}

{%- comment -%} Count of Items in Array {%- endcomment -%}
{%- assign count = array.size -%}

{%- comment -%} Current Iteration in the loop {%- endcomment -%}
{%- if iteration -%}
  {%- assign currentIteration = iteration | plus: 1 -%}
{%- else -%}
  {%- assign currentIteration = 0 -%}
{%- endif -%}

{%- assign currentArray = array -%}

{%- comment -%} Now push current index to the stack {%- endcomment -%}
{%- capture currentStack -%}
  {%- if stack != blank -%}
    {{ stack }};;
  {%- endif -%}
  {{- count -}}::
  {{- currentIteration -}}::
  {{- currentArray | join: ',' -}}
{%- endcapture -%}

{%- comment -%} Include item, remember that it may have a sub loop {%- endcomment -%}
{%- assign currentItem = currentArray[currentIteration] -%}
{%- include do with {
  item: currentItem,
  data: data
  stack: currentStack,
  forindex: currentIteration
} -%}

{%- comment -%} Now we need to pop the stack {%- endcomment -%}
{%- assign newStack = '' -%}
{%- assign currentStackSplit = currentStack | split: ';;' -%}
{%- for s in currentStackSplit -%}
  {%- if forloop.last -%}
    {%- assign sSpl = s | split: '::' -%}
    {%- assign count = sSpl[0] | minus: 0 -%}
    {%- assign currentIteration = sSpl[1] | minus: 0 -%}
    {%- assign currentArray = sSpl[2] | split: ',' -%}
  {%- else -%}
    {%- assign newStack = newStack | append: s -%}
    {%- assign sizeMinusOne = currentStackSplit.size | minus: 2 -%}
    {%- if forloop.index0 < sizeMinusOne -%}
      {%- assign newStack = newStack | append: ';;' -%}
    {%- endif -%}
  {%- endif -%}
{%- endfor -%}
{%- assign currentStack = newStack -%}

{%- comment -%} Now do next iteration {%- endcomment -%}
{%- assign nextIteration = currentIteration | plus: 1 -%}
{%- if nextIteration < currentArray.size -%}
  {%- include 'tool.for-each' with {
    array: currentArray,
    iteration: currentIteration,
    do: do,
    data: data,
    stack: newStack
  } -%}
{%- endif -%}
