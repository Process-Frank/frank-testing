{%- comment -%}
  JSON Section
    Simple snippet used for generating JSON data for a section, provides common
    tools and overrides for most common data types (linklist, product etc)

  Dependencies:
    snippets/tool.get-template-type - Used to fetch the template type.

  Parameters:
    section - The section itself
    name - Name of the section
    class - Class of the section
    componentName - React Component Name
    sectionSettings -  CSV of Setting id's
    sectionSettingTypes - CSV of Setting Types (matching the ID's indexes)
    group (Optional) - The group that this section belong to, use this for static sections (Header, Footer etc)
                        Defaults to the current template type.

  Version:
    1.0.0 - 2018/08/02
{%- endcomment -%}
{%- include 'tool.is-json-template' -%}

{%- comment -%} First we need to generate the correct data {%- endcomment -%}
{%- assign settingsArray = sectionSettings | split: ',' -%}
{%- assign settingTypesArray = sectionSettingTypes | split: ',' -%}

{%- unless group != blank -%}
  {%- include 'tool.get-template-type' -%}
  {%- assign group = templateType -%}
{%- endunless -%}
{%- assign groupJSON = group | json -%}

{%- comment -%} Now we can generate our JSON {%- endcomment -%}
{%- unless isJSON -%}
  <script type="text/javascript">
    window.Sections = window.Sections || {};
    window.Sections[{{ groupJSON }}] = window.Sections[{{ groupJSON }}] || [];
    window.Sections[{{ groupJSON }}].push(
{%- endunless -%}
  {
    "id": {{ section.id | json }},
    "name": {{ name | json }},
    "class": {{ class | json }},
    "componentName": {{ component | json }},
    "group": {{ groupJSON }},
    "settings": [
      {%- for s in settingsArray -%}
        {%- assign type = settingTypesArray[forloop.index0] -%}
        {%- assign valueRaw = section.settings[s] -%}
        {%- include 'tool.json-setting' with {
          id: s,
          type: type,
          valueRaw: valueRaw
        } -%}
        {%- unless forloop.last -%},{%- endunless -%}
      {%- endfor -%}

      {%- comment -%}/* Extra Settings (Good for bypassing that forloop */{%- endcomment -%}
      {%- if extraSettings != blank -%}
        {%- if settingTypesArray.size > 0 -%},{%- endif -%}
        {{ extraSettings }}
      {%- endif -%}
    ],
    "blocks": [
      {%- for block in section.blocks -%}
        {%- include 'tool.json-block' with block -%}
        {%- unless forloop.last -%},{%- endunless -%}
      {%- endfor -%}
    ]
  }
{%- unless isJSON -%}
    );
  </script>

  {%- comment -%}
    TODO: If SEO is becoming an issue we can consider generating "mockup data" here
    for the crawlers to see?
  {%- endcomment -%}
{%- endunless -%}
